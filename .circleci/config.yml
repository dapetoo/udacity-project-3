version: 2.1

orbs:
  slack: circleci/slack@4.1

jobs:

  build_frontend:
    docker:
      - image: cimg/node:16.9.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
      - slack/notify:
          event: fail
          channel: notification_channel
          template: basic_fail_1
      - slack/notify:
          event: pass
          channel: notification_channel
          template: basic_success_1

  build_backend:
    docker:
      - image: cimg/node:16.9.1
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Backend build
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
      - slack/notify:
          event: fail
          channel: notification_channel
          template: basic_fail_1
      - slack/notify:
          event: pass
          channel: notification_channel
          template: basic_success_1

  test_frontend:
    docker:
      - image: cimg/node:16.9.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend Unit Test
          command: |
            cd frontend
            npm install
            npm run test
      - slack/notify:
          event: fail
          channel: notification_channel
          template: basic_fail_1
      - slack/notify:
          event: pass
          channel: notification_channel
          template: basic_success_1

  test_backend:
    docker:
      - image: cimg/node:16.9.1
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Backend Unit Test
          command: |
            cd backend
            npm install
            npm run test
      - slack/notify:
          event: fail
          channel: notification_channel
          template: basic_fail_1
      - slack/notify:
          event: pass
          channel: notification_channel
          template: basic_success_1

  scan-frontend:
    docker:
      - image: cimg/node:16.9.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend Code Scan
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
      - slack/notify:
          event: fail
          channel: notification_channel
          template: basic_fail_1
      - slack/notify:
          event: pass
          channel: notification_channel
          template: basic_success_1

  scan_backend:
    docker:
      - image: cimg/node:16.9.1
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Backend Code Scan
          command: |
            cd backend
            npm install
            npm audit fix --audit-level=critical --force
      - slack/notify:
          event: fail
          channel: notification_channel
          template: basic_fail_1
      - slack/notify:
          event: pass
          channel: notification_channel
          template: basic_success_1

  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          name: Install tar, gzip, git
          command: yum -y install tar gzip git
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            # Use the workflow id to mark your CloudFormation stacks so that you can reference them later on (ex: rollback). 
            aws cloudformation deploy \
                --template-file .circleci/files/backend.yml \
                --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
                --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  \
                --tags project=udapeople
  
workflows:
  default:
    jobs:
      - build_frontend
      - build_backend
      - test_frontend:
          requires: [build_frontend]
      - test_backend:
          requires: [build_backend]
      - scan-frontend:
          requires: [build_frontend]
      - scan_backend:
          requires: [build_backend]
      - deploy-infrastructure
